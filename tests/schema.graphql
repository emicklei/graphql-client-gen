scalar URL
scalar Date

interface Identified {
    # built-in scalar
    id: ID!
}

type Result implements Identified {    
    """will map to CustomDate"""
    when: Date
    explanation(language:String!,long:Boolean):String!
}

"""comment for ResultInput"""
input ResultInput {
    """comment for when"""
    when: Date!    
    """comment for unused"""
    unused: String @deprecated
}

"""
Query comment
multiple lines
"""
type Query {
    # no argument operation
    noArgOp : Int!

    # one argument operation
    oneArgOp(required : Boolean!): String
    
    # filter operation
    filterOp(sort: String!): [Result]

    # optional arguments
    # limit = max results
    # prefix =
    ListOp(limit:Int, prefix:String!): [Result]
    MatrixOp(limit:Int): [[MatrixCell]!]!

    plusOp(a:Int!,b:Int!):Int
    plusArrayOp(as:[Int]!,bs:[Int!]):[Int]

    allResults(before:Date):[Result]
}


type MatrixCell {
    isEmptyCell: Boolean!
}

""" 
Mutation comment
multiple lines
"""
type Mutation {
    """
    create a Result
    """
    createResult(input:ResultInput!): ID!


# BEGIN copy from Query

    # no argument operation
    noArgOp : Int!

    # one argument operation
    oneArgOp(required : Boolean!): String
    
    # filter operation
    filterOp(sort: String!): [Result]

    # optional arguments
    # limit = max results
    # prefix =
    ListOp(limit:Int, prefix:String!): [Result]

    plusOp(a:Int!,b:Int!):Int
    plusArrayOp(as:[Int]!,bs:[Int!]):[Int]    

# END copy from Query    
}

directive @version(name:String="dev") on SCHEMA

schema @version(name:"v1.0.0") {
	query: Query
	mutation: Mutation
}