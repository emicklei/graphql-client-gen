"""
This is a 
multine comment
"""
type Tweet {
    id: ID!
    # The tweet text. No more than 140 characters!
    body: String
    # When the tweet was published
    date: Date
    # Who published the tweet
    Author: User
    # Views, retweets, likes, etc
    Stats: Stat
    # First responders
    # multiline
    Responders(limit:Int!):[User!]
}

type User {
    id: ID!
    username: String
    first_name: String
    last_name: String
    full_name: String
    name: String @deprecated
    avatar_url: Url
}

type Stat {
    views: Int
    likes: Int
    retweets: Int
    responses: Int
}

type Notification {
    """ comment 1 """
    id: ID
    """
    comment 2
    """
    date: Date
    # private comment
    type: String
}

type Meta {
    """
    This is a
    multine comment
    """
    count: Int
}

"""
This is a 
multine comment
"""
scalar Url
scalar Date

type Query {
    Tweet(id: ID!): Tweet
    """
    This is a 
    multine comment
    """
    Tweets(limit: Int, skip: Int, sort_field: String, sort_order: String): [Tweet]
    # other comment
    TweetsMeta: Meta
    User(id: ID!): User
    Notifications(limit: Int): [Notification]
    NotificationsMeta: Meta
    CurrentFilter: FilterValue!
}

type Mutation {
    createTweet (
        body: String
    ): Tweet
    deleteTweet(id: ID!): Tweet
    markTweetRead(id: ID!): Boolean
}

union FilterValue = ValueFilter | ValuesFilter | RangeFilter

type ValueFilter {
    value: String!
}

type ValuesFilter {
    values: [String!]!
}

type RangeFilter {
    """
    Filter the values from and including this value.
    If this field is not set then the filter is applied without a minimum value.
    """
    from: Float
    """
    Filter the values up to and including this value.
    If this field is not set then the filter is applied without a maximum value.
    """
    to: Float
}